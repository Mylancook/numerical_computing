# name this file 'solutions.py'
"""Volume II Lab 13: Optimization Packages I (scipy.optimize)
<Name>
<Class>
<Date>
"""

def prob1():
    """Use the minimize() function in the scipy.optimize package to find the
    minimum of the Rosenbrock function (scipy.optimize.rosen) using the
    following methods:
        Nelder-Mead
        Powell
        CG
        BFGS
        Newton-CG (test with and without the hessian)
        L-BFGS-B
        TNC
        COBYLA
        SLSQP
    Use x0 = np.array([4., -2.5]) for the initial guess for each test.
    
    Print a statement answering the following questions:
        Which algorithm(s) take(s) the least number of iterations?
        Which algorithm(s) fail to find the (correct) minimum?
    """
    raise NotImplementedError("Problem 1 Incomplete")


def prob2():
    """Explore the documentation on the function scipy.optimize.basinhopping()
    online or via IPython. Use it to find the global minimum of the multmin()
    function given in the lab, with initial point x0 = np.array([-2, -2]) and
    the Nelder-Mead algorithm. Try it first with stepsize=0.5, then with
    stepsize=0.2.

    Return the minimum value of the function with stepsize=0.2.
    Print a statement answering the following question:
        Why doesn't scipy.optimize.basinhopping() find the minimum the second
        time (with stepsize=0.2)?
    """
    raise NotImplementedError("Problem 2 Incomplete")

def prob3():
    """Find the roots of the system
    [       -x + y + z     ]   [0]
    [  1 + x^3 - y^2 + z^3 ] = [0]
    [ -2 - x^2 + y^2 + z^2 ]   [0]

    Returns the values of x,y,z as an array.
    """
    raise NotImplementedError("Problem 3 Incomplete")


def prob4():
    """Use the scipy.optimize.curve_fit() function to fit a heating curve to
    the data found in `heating.txt`. The first column of this file is time, and
    the second column is temperature in Kelvin.

    The fitting parameters should be gamma, C, and K, as given in Newton's law
    of cooling.

    Plot the data from `heating.txt` and the curve generated by curve_fit.
    Return the values gamma, C, K as an array.
    """
    raise NotImplementedError("Problem 4 Incomplete")